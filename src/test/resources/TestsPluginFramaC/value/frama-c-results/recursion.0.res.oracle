[kernel] Parsing recursion.0.i (no preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  G ∈ {0}
  x ∈ {0}
  c ∈ [--..--]
  s ∈ {0}
  pg ∈ {0}
[value] recursion.0.i:39: Warning: 
  detected recursive call (g <- g :: recursion.0.i:68 <- main)
  Use -val-ignore-recursive-calls to ignore (beware this will make the analysis
  unsound)
[value] User Error: Degeneration occurred:
  results are not correct for lines of code that can be reached from the degeneration point.
[metrics] Defined functions (6)
  =====================
   escaping_formal (2 calls); f (2 calls); ff (2 calls); g (2 calls);
   h (2 calls); main (0 call); 
  
  Undefined functions (0)
  =======================
   
  
  'Extern' global variables (0)
  =============================
   
  
  Potential entry points (1)
  ==========================
   main; 
  
  Global metrics
  ============== 
  Sloc = 32
  Decision point = 3
  Global variables = 5
  If = 3
  Loop = 0
  Goto = 0
  Assignment = 10
  Exit point = 6
  Function = 6
  Function call = 16
  Pointer dereferencing = 3
  Cyclomatic complexity = 9
[report] Dumping properties in './frama-c-results/recursion.0.res.csv'
[report] Classification
[report] Output frama-c-results/recursion.0.json
